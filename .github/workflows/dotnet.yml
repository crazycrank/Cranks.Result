name: .NET

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    outputs:
      branchName: ${{ steps.gitversion.outputs.branchName }}
      semVer: ${{ steps.gitversion.outputs.semVer }}"

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        
    - name: Cache .NET
      uses: actions/cache@v2
      # TODO better cache key?
      id: cache-dotnet
      with:
        path: ~/runner/.dotnet
        key: ${{ runner.os }}-dotnet
        
    - name: Setup .NET
      if: steps.cache-dotnet.outputs.cache-hit != 'true'
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
        
    - name: Cache GitVersion
      uses: actions/cache@v2
      id: cache-gitversion 
      with:
        path: ~/runner/.gitversion
        key: ${{ runner.os }}-gitversion
        
    - name: Install GitVersion
      if: steps.cache-gitversion.outputs.cache-hit != 'true'
      run: dotnet tool install GitVersion.Tool --tool-path ~/runner/.gitversion
        
    - name: Determine Version
      id: gitversion
      run: ~/runner/.gitversion/dotnet-gitversion /output buildserver

    - name: Cache dependencies
      id: cache-dependencies
      uses: actions/cache@v2
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        
    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore -p:VersionPrefix=${{ env.GitVersion_AssemblySemVer }} -p:VersionSuffix=${{ env.GitVersion_PreReleaseTag }} --configuration Release

    - name: Test
      run: dotnet test --no-build --configuration Release --verbosity normal

    - name: Pack
      if: contains(env.GitVersion_BranchName, 'master')
      run: dotnet pack ResultZ/ResultZ.csproj --no-build --configuration Release --output nupkgs -p:VersionPrefix=${{ env.GitVersion_MajorMinorPatch }} -p:VersionSuffix=${{ env.GitVersion_NuGetPreReleaseTagV2 }} --include-symbols --include-source -p:SymbolPackageFormat=snupkg

    - name: Nuget Publish
      if: contains(env.GitVersion_BranchName, 'master')
      run: dotnet nuget push nupkgs/ResultZ.${{ env.GitVersion_NuGetVersionV2 }}.nupkg --api-key ${{ secrets.NuGetAPIKey }} --source https://api.nuget.org/v3/index.json

    - name: Tag commit with version
      if: contains(env.GitVersion_BranchName, 'master')
      run: |
        git tag v${{ env.GitVersion_MajorMinorPatch }}
        git push --tag
